@model Reminder.WebUI.Models.ViewsModels.ViewNewReminder

@{
    ViewBag.Title = "AddReminder";
    var count = 1;
}

@using (Html.BeginForm("AddReminder", "Reminder", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Create new reminder</h3>
        @if (Model != null && !string.IsNullOrEmpty(Model.Message))
        {
            if (ViewBag.Result)
            {
                <div class="alert alert-success">
                    @Model.Message
                </div>
            }
            else
            {
                <div class="alert alert-error">
                    @Model.Message
                </div>
            }
        }

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Reminder.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reminder.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reminder.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reminder.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group' id='datetimepicker'>
                    @Html.TextBoxFor(model => model.Reminder.Date, "", new { @class = "form-control datatimepicker-style" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Reminder.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reminder.ReminderTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group' id='datetimepicker2'>
                    @Html.TextBoxFor(model => model.Reminder.ReminderTime, "", new { @class = "form-control datatimepicker-style", data_val_data = "false" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Reminder.ReminderTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextAreaFor(model => model.Description, 5, 20, new { @class = "form-control", @style = "resize: none" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

            </div>
        </div>

        <div id="action_conteiner">
            <div id="action_group" class="form-group">
                @Html.Label($"Action {count}", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Actions, new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <a id="newAction" style="cursor:pointer">
                    <span class="glyphicon glyphicon-plus"></span>
                    Add new Action
                </a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Category, "CategoryId", "CategoryName"), "Выбрать категорию", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a class='btn' href='javascript:;'>
                    Choose File...
                    <input type="file" name="Image" size="40"
                           style="position:absolute;z-index:2;top:0; left:0;filter: alpha(opacity=0); opacity:0;
                                   background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                <span class='label label-info' id="upload-file-info"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Back to List", "ReminderList", "Reminder", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}


